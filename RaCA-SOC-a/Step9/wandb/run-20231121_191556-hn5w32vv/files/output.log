
Loaded txt
Using 1D Conv Model with Uncertainties
  0%|          | 0/10000 [00:00<?, ?it/s]
> /home/sujaynair/RaCA-SOC-a-spectrum-analysis/RaCA-SOC-a/Step9/updatedTrain.py(255)<module>()
-> loss = encoder_loss + decoder_loss + kl_Loss * 1 # adjust weight
tensor([[-0.1258, -0.1085,  0.1045,  ...,  0.0023,  0.1528,  0.0365],
        [-0.1252, -0.1075,  0.1040,  ...,  0.0033,  0.1492,  0.0356],
        [-0.1258, -0.1087,  0.1047,  ...,  0.0015,  0.1535,  0.0366],
        ...,
        [-0.1256, -0.1082,  0.1045,  ...,  0.0022,  0.1521,  0.0364],
        [-0.1256, -0.1081,  0.1043,  ...,  0.0026,  0.1510,  0.0359],
        [-0.1252, -0.1080,  0.1043,  ...,  0.0015,  0.1505,  0.0361]],
       device='cuda:0', grad_fn=<AddmmBackward0>)
*** NameError: name 'mini' is not defined
*** RuntimeError: Boolean value of Tensor with more than one value is ambiguous
tensor(-0.2502, device='cuda:0', grad_fn=<UnbindBackward0>)
tensor(-33471.9727, device='cuda:0', grad_fn=<MulBackward0>)
Traceback (most recent call last):
  File "/home/sujaynair/RaCA-SOC-a-spectrum-analysis/RaCA-SOC-a/Step9/updatedTrain.py", line 255, in <module>
    loss = encoder_loss + decoder_loss + kl_Loss * 0.1 # adjust weight
  File "/home/sujaynair/RaCA-SOC-a-spectrum-analysis/RaCA-SOC-a/Step9/updatedTrain.py", line 255, in <module>
    loss = encoder_loss + decoder_loss + kl_Loss * 0.1 # adjust weight
  File "/usr/lib/python3.10/bdb.py", line 90, in trace_dispatch
    return self.dispatch_line(frame)
  File "/usr/lib/python3.10/bdb.py", line 115, in dispatch_line
    if self.quitting: raise BdbQuit
bdb.BdbQuit
Traceback (most recent call last):
  File "/home/sujaynair/RaCA-SOC-a-spectrum-analysis/RaCA-SOC-a/Step9/updatedTrain.py", line 255, in <module>
    loss = encoder_loss + decoder_loss + kl_Loss * 0.1 # adjust weight
  File "/home/sujaynair/RaCA-SOC-a-spectrum-analysis/RaCA-SOC-a/Step9/updatedTrain.py", line 255, in <module>
    loss = encoder_loss + decoder_loss + kl_Loss * 0.1 # adjust weight
  File "/usr/lib/python3.10/bdb.py", line 90, in trace_dispatch
    return self.dispatch_line(frame)
  File "/usr/lib/python3.10/bdb.py", line 115, in dispatch_line
    if self.quitting: raise BdbQuit
bdb.BdbQuit